/**
 * SPDX-FileCopyrightText: Copyright (c) 2021-2022,NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/any.proto";

package srf.codable.protos;

enum MemoryKind
{
    Host = 0;
    Pinned = 1;
    Device = 2;
    Managed = 3;
    None = 99;
}

message RemoteMemoryDescriptor
{
    uint32 instance_id = 1;
    uint32 object_id = 2;
    uint64 remote_address = 3;
    uint64 remote_bytes = 4;
    bytes remote_key = 5;
    MemoryKind memory_kind = 6;
}

message PackedDescriptor
{
    uint32 buffer_id = 1;
    uint64 remote_address = 2;
    uint64 remote_bytes = 3;
    MemoryKind memory_kind = 4;
}

message EagerDescriptor
{
    bytes data = 1;
    MemoryKind memory_kind = 2;
}

message MetaDataDescriptor
{
    google.protobuf.Any meta_data = 1;
}

message Descriptor
{
    oneof desc
    {
        RemoteMemoryDescriptor   remote_desc    = 1;
        PackedDescriptor   packed_desc    = 2;
        EagerDescriptor    eager_desc     = 3;
        MetaDataDescriptor meta_data_desc = 4;
    }
}

message Object
{
    uint32 desc_id  = 1;
    uint64 type_index_hash = 2;
}

message EncodedObject
{
    repeated Descriptor descriptors = 1;
    repeated Object     objects     = 2;
    google.protobuf.Any meta_data   = 3;
}

message RemoteDescriptor
{
    uint32 instance_id = 1;
    uint64 object_id = 2;
    uint32 tokens = 3;
    EncodedObject encoded_object = 4;
}
